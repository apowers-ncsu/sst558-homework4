[
  {
    "objectID": "homework4.html",
    "href": "homework4.html",
    "title": "Homework 4",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "homework4.html#glass-data",
    "href": "homework4.html#glass-data",
    "title": "Homework 4",
    "section": "Glass data",
    "text": "Glass data\n\nContext\nWe will read in data from https://www4.stat.ncsu.edu/~online/datasets/glass.data. It appears to be delimited using commas. Its variables and descriptions are as follows:\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nId\nNumber 1-214\n\n\nRI\nRefractive index\n\n\nNa\nSodium (unit measurement: weight percent in corresponding oxide, as are attributes 4-10)\n\n\nMg\nMagnesium\n\n\nAl\nAluminum\n\n\nSi\nSilicon\n\n\nK\nPotassium\n\n\nCa\nCalcium\n\n\nBa\nBarium\n\n\nFe\nIron\n\n\nType of Glass\nvarious\n\n\n\nType of Glass has enumerated values of the following list:\n\n\n\nNumber\nValue\n\n\n\n\n1\nbuilding_windows_float_processed\n\n\n2\nbuilding_windows_non_float_processed\n\n\n3\nvehicle_windows_float_processed\n\n\n4\nvehicle_windows_non_float_processed (none in this database)\n\n\n5\ncontainers\n\n\n6\ntableware\n\n\n7\nheadlamps\n\n\n\n\n\nRequirements\n\nRead into R from URL via tidyverse function, adding my own column names, and printing out the tibble.\n\n\nglass_names &lt;- c(\"Id\",\n                 \"RI\",\n                 \"Na\",\n                 \"Mg\",\n                 \"Al\",\n                 \"Si\",\n                 \"K\",\n                 \"Ca\",\n                 \"Ba\",\n                 \"Fe\",\n                 \"Type of Glass\")\nglass_data &lt;- read_csv('https://www4.stat.ncsu.edu/~online/datasets/glass.data',\n         col_names = glass_names)\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type of Glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe `Type of Glass`\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;           &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                  1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                  1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                  1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                  1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                  1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26               1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                  1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                  1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                  1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11               1\n# ℹ 204 more rows\n\n\n\nCreate a chain to overwrite the Type of Glass field via mutate(). Replace the enumerated values with the full text equivalents.\n\n\n#ignore the 4th element which does not exist in this dataset, to permit factor() to function as desired.\ntype_of_glass_factors &lt;- c(\"building_windows_float_processed\",\n                           \"building_windows_non_float_processed\",\n                           \"vehicle_windows_float_processed\",\n                           #\"vehicle_windows_non_float_processed\",\n                           \"containers\",\n                           \"tableware\",\n                           \"headlamps\")\n\n#adjust the type of glass field to string\nglass_data |&gt; \n  mutate(`Type of Glass` = factor(glass_data$`Type of Glass`,\n                                  labels = type_of_glass_factors,\n                                  ordered = TRUE)\n         )\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe `Type of Glass`  \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\n\n\nContinue the chain and filter only the observations where Fe &lt; 0.2 and the Type of Glass is tableware or headlamp.\n\n\nglass_data |&gt; \n  \n  #adjust the type of glass field to string\n  mutate(`Type of Glass` = factor(glass_data$`Type of Glass`,\n                                  labels = type_of_glass_factors,\n                                  ordered = TRUE)\n         ) |&gt;\n  \n  #filter rows for Fe and Type\n  filter(Fe &lt; 0.2,\n         `Type of Glass` %in% c(\"tableware\",\"headlamps\")\n         )\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe `Type of Glass`\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt;          \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware      \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware      \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware      \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware      \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware      \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware      \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware      \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware      \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware      \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps      \n# ℹ 28 more rows"
  },
  {
    "objectID": "homework4.html#yeast-data",
    "href": "homework4.html#yeast-data",
    "title": "Homework 4",
    "section": "Yeast data",
    "text": "Yeast data\n\nContext\nWe will read in data from https://www4.stat.ncsu.edu/~online/datasets/yeast.data. It appears to be delimited using double spaces, but some values in column 1 have more than two spaces - so it is actually lined up. Its variables and descriptions are as follows:\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\neq_name\nAccession number for the SWISS-PROT database\n\n\nmcg\nMcGeoch’s method for signal sequence recognition.\n\n\ngvh\nvon Heijne’s method for signal sequence recognition.\n\n\nalm\nScore of the ALOM membrane spanning region prediction program.\n\n\nmit\nScore of discriminant analysis of the amino acid content of the N-terminal region (20 residues long) of mitochondrial andnon-mitochondrial proteins.\n\n\nerl\nPresence of ‘HDEL’ substring (thought to act as a signal for retention in the endoplasmic reticulum lumen). Binary attribute.\n\n\npox\nPeroxisomal targeting signal in the C-terminus.\n\n\nvac\nScore of discriminant analysis of the amino acid content of vacuolar and extracellular proteins.\n\n\nnuc\nScore of discriminant analysis of nuclear localization signals of nuclear and non-nuclear proteins.\n\n\nclass\nLocalization site\n\n\n\n\n\nRequirements\n\nRead into R from URL via tidyverse function, adding my own column names, and printing out the tibble.\n\n\nyeast_names &lt;- c(\"seq_name\",\n                 \"mcg\",\n                 \"gvh\",\n                 \"alm\",\n                 \"mit\",\n                 \"erl\",\n                 \"pox\",\n                 \"vac\",\n                 \"nuc\",\n                 \"class\"\n                 )\nyeast_data &lt;- read_fwf('https://www4.stat.ncsu.edu/~online/datasets/yeast.data',\n                       #col_names = yeast_names,\n                       fwf_widths(c(12,\n                                    6,\n                                    6,\n                                    6,\n                                    6,\n                                    6,\n                                    6,\n                                    6,\n                                    6,\n                                    3),\n                                  yeast_names)\n                       )\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (2): seq_name, class\ndbl (8): mcg, gvh, alm, mit, erl, pox, vac, nuc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\nBegin a chain to remove columns seq_name and nuc.\n\n\nyeast_data |&gt;\n  \n  #remove two columns\n  select(-seq_name,\n         -nuc)\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n\nContinue the chain to add columns for summary, descriptive statistics. Include mean and median for each numeric variable, grouped by each class.\n\n\nyeast_data |&gt;\n  \n  #remove two columns\n  select(-seq_name,\n         -nuc) |&gt;\n  \n  #group these by class\n  group_by(class) |&gt;\n  \n  #create mean and median for all numeric columns\n  mutate(\n    across(\n      where(is.numeric),\n      list(mean = mean,\n           median = median),\n      .names = \"{.col}_{.fn}\"\n    )\n  ) \n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "homework4.html#context-2",
    "href": "homework4.html#context-2",
    "title": "Homework 4",
    "section": "Context",
    "text": "Context\nWe will be ingesting data for white and red wine from these locations: - https://www4.stat.ncsu.edu/~online/datasets/white-wine.xlsx - https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\nEach dataset will be loaded from a different file format. Their variables and descriptions are as follows:\n\n\n\nVariable\nType\n\n\n\n\nfixed acidity\ninput\n\n\nvolatile acidity\ninput\n\n\ncitric acid\ninput\n\n\nresidual sugar\ninput\n\n\nchlorides\ninput\n\n\nfree sulfur dioxide\ninput\n\n\ntotal sulfur dioxide\ninput\n\n\ndensity\ninput\n\n\npH\ninput\n\n\nsulphates\ninput\n\n\nalcohol\ninput\n\n\nquality\noutput"
  },
  {
    "objectID": "homework4.html#requirements-2",
    "href": "homework4.html#requirements-2",
    "title": "Homework 4",
    "section": "Requirements",
    "text": "Requirements\n\nDownload the Excel version of the white wine dataset, placing it in the working directory for the project. Import the first sheet via readxl and show the tibble.\n\n\nwhite_wine_data &lt;- readxl::read_xlsx(\"white-wine.xlsx\",\n                                     sheet = 1)\nwhite_wine_data\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRead in the second sheet to get nice column names. Overwrite the originals.\n\n\n#replace column names for WWD with the column of the second sheet\ncolnames_white_wine_data &lt;- readxl::read_xlsx(\"white-wine.xlsx\",sheet = 2)\ncolnames(white_wine_data) &lt;- colnames_white_wine_data$Variables\n\n\nAdd a column to identify wine type as white.\n\n\nwhite_wine_data$type &lt;- \"white\"\n\n\nNow, read in the semicolon delimited red wine data. Prep the tibble similarly, with fixed column names and type of red.\n\n\n#read\nred_wine_data &lt;- read_delim(\"red-wine.csv\",delim=\";\")\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#fix column names\ncolnames(red_wine_data) &lt;- colnames_white_wine_data$Variables\n\n#add type\nred_wine_data$type &lt;- \"red\"\n\n\nUsing dplyr::bind_rows(), combine the two.\n\n\nfull_wine_data &lt;- bind_rows(white_wine_data,red_wine_data)\n\n\nChain this to filter only high-quality wines (quality &gt; 6.5) and those with a reasonable alcohol value (alcohol &lt; 132).\n\n\nfull_wine_data |&gt;\n  filter(quality &gt; 6.5,\n         alcohol &lt; 132)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            62             0.66        0.48            1.2     0.029\n 4            62             0.66        0.48            1.2     0.029\n 5            64             0.31        0.38            2.9     0.038\n 6            68             0.26        0.42            1.7     0.049\n 7            72             0.32        0.36            2       0.033\n 8            74             0.18        0.31            1.4     0.058\n 9            66             0.25        0.29            1.1     0.068\n10            62             0.16        0.33            1.1     0.057\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nNow sort from highest to lowest quality.\n\n\nfull_wine_data |&gt;\n  filter(quality &gt; 6.5,\n         alcohol &lt; 132) |&gt;\n  arrange(desc(quality))\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            91             0.27        0.45           10.6     0.035\n 2            66             0.36        0.29            1.6     0.021\n 3            74             0.24        0.36            2       0.031\n 4            69             0.36        0.34            4.2     0.018\n 5            71             0.26        0.49            2.2     0.032\n 6            62             0.66        0.48            1.2     0.029\n 7            62             0.66        0.48            1.2     0.029\n 8            68             0.26        0.42            1.7     0.049\n 9            67             0.23        0.31            2.1     0.046\n10            67             0.23        0.31            2.1     0.046\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nNow select only the columns:\n\n\ncontains acid\nalcohol\ntype\nquality\n\n\nfull_wine_data |&gt;\n  filter(quality &gt; 6.5,\n         alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"),\n         alcohol,\n         type,\n         quality)\n\n# A tibble: 1,206 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9\n 2            66             0.36        0.29     124 white       9\n 3            74             0.24        0.36     125 white       9\n 4            69             0.36        0.34     127 white       9\n 5            71             0.26        0.49     129 white       9\n 6            62             0.66        0.48     128 white       8\n 7            62             0.66        0.48     128 white       8\n 8            68             0.26        0.42     105 white       8\n 9            67             0.23        0.31     107 white       8\n10            67             0.23        0.31     107 white       8\n# ℹ 1,196 more rows\n\n\n\nContinue chain to add mean, stdev for alcohol for each setting of quality. To do this, we group by quality and then mutate to add mean and sd!\n\n\nfull_wine_data |&gt;\n  filter(quality &gt; 6.5,\n         alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"),\n         alcohol,\n         type,\n         quality) |&gt;\n  group_by(quality) |&gt;\n  mutate(\n    across(\n      alcohol,\n      list(mean = mean,\n           sd = sd),\n      .names = \"{.col}_{.fn}\"\n    )\n  )\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9        122. \n 2            66             0.36        0.29     124 white       9        122. \n 3            74             0.24        0.36     125 white       9        122. \n 4            69             0.36        0.34     127 white       9        122. \n 5            71             0.26        0.49     129 white       9        122. \n 6            62             0.66        0.48     128 white       8         94.1\n 7            62             0.66        0.48     128 white       8         94.1\n 8            68             0.26        0.42     105 white       8         94.1\n 9            67             0.23        0.31     107 white       8         94.1\n10            67             0.23        0.31     107 white       8         94.1\n# ℹ 1,196 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;"
  }
]